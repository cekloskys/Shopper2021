package com.example.shopper2021;

import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

public class ViewItem extends AppCompatActivity {

    // declare an Intent
    Intent intent;

    // declare a Bundle and a long for data passed from ViewList in Bundle
    Bundle bundle;
    long id;
    long listId;

    // declare a DBHandler
    DBHandler dbHandler;

    // declare EditTexts
    EditText nameEditText;
    EditText priceEditText;
    EditText quantityEditText;

    // declare Strings for selected shopping list's name, price, and quantity
    String name;
    String price;
    String quantity;

    /**
     * This method initializes the Action Bar and View of the ViewItem Activity.
     * @param savedInstanceState a Bundle object that is passed into the
     *                           onCreate method of every Android Activity.
     *                           Activities have the ability, under special
     *                           circumstances, to restore themselves to a
     *                           previous state using the data stored in this
     *                           object.  If there is no available instance
     *                           data, the object will be null.
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {

        // code generated by Android Studio that initializes the View and
        // Action Bar of the ViewList Activity
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_view_item);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        // initialize Bundle
        bundle = this.getIntent().getExtras();

        // get shopping list id passed in Bundle and store it in long
        id = bundle.getLong("_id");

        // get shopping list id passed in Bundle and store it in long
        listId = bundle.getLong("_list_id");

        // initialize DBHandler
        dbHandler = new DBHandler(this, null);

        // initialize EditTexts
        nameEditText = (EditText) findViewById(R.id.nameEditText);
        priceEditText = (EditText) findViewById(R.id.priceEditText);
        quantityEditText = (EditText) findViewById(R.id.quantityEditText);

        // disable EditTexts
        nameEditText.setEnabled(false);
        priceEditText.setEnabled(false);
        quantityEditText.setEnabled(false);

        // get shopping list item selected in ViewList Activity
        Cursor cursor = dbHandler.getShoppingListItem((int) id);

        // move to the first row in the Cursor
        cursor.moveToFirst();

        // get the name, price, and quantity data in the Cursor
        name = cursor.getString(cursor.getColumnIndex("name"));
        price = Double.toString(cursor.getDouble(cursor.getColumnIndex("price")));
        quantity = Integer.toString(cursor.getInt(cursor.getColumnIndex("quantity")));

        // set the name, price, and quantity data in the Cursor in the EditTexts
        nameEditText.setText(name);
        priceEditText.setText(price);
        quantityEditText.setText(quantity);
    }

    /**
     * This method further initializes the Action Bar of the ViewItem Activity.
     * It gets the code in the menu main resource file and incorporates it
     * into the Action Bar.
     * @param menu menu view list resource file
     * @return true
     */
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu view item; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_view_item, menu);
        return true;
    }

    /**
     * This method gets called when a menu item in the overflow menu is
     * selected and it controls what happens when the menu item is selected.
     * @param item selected menu item in overflow menu
     * @return true if menu item is selected, else false
     */
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // get the id of the menu item selected
        switch (item.getItemId()) {
            case R.id.action_home :
                // initialize an Intent for the MainActivity and start it
                // if the id is for the MainActivity
                intent = new Intent(this, MainActivity.class);
                startActivity(intent);
                return true;
            case R.id.action_create_list :
                // initialize an Intent for the CreateList Activity and start it
                // if the id is for the CreateList Activity
                intent = new Intent(this, CreateList.class);
                startActivity(intent);
                return true;
            case R.id.action_add_item:
                // initialize an Intent for the AddItem Activity
                intent = new Intent(this, AddItem.class);
                // put the database id in the Intent
                intent.putExtra("_id", id);
                // start the Activity
                startActivity(intent);
                return true;
            case R.id.action_view_list:
                // initialize an Intent for the ViewList Activity
                intent = new Intent(this, ViewList.class);
                // put the database id in the Intent
                intent.putExtra("_id", listId);
                // start the Activity
                startActivity(intent);
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }

    /**
     * This method gets called when the delete button in the Action Bar of the
     * ViewItem Activity gets clicked.  It deletes a row in the
     * shoppinglistitem table.
     * @param menuItem delete item menu item
     */
    public void deleteItem(MenuItem menuItem) {

        // delete shopping list item from database
        dbHandler.deleteShoppingListItem((int) id);

        // display "Item Deleted!" Toast
        Toast.makeText(this, "Item Deleted!", Toast.LENGTH_LONG).show();
    }
}